{{!--
###
 #  @View
 #
 #  @name single-column
 #  @type component
 #  @description Single Column course component
 #  @maturing
 #  @content
 #    @contains @object_of 'parameters' with:
 #      @contains @object_of 'background' with:
 #        @prop [type] type={string} title="Type of Background" description="Determines the type of background for the outer grid/container."
 #            "image"
 #            "color"
 #        @contains @one_of dependency with:
 #          @when type = "image":
 #            @prop path type={string} title="Path" description="Path to Image" @allow imagePicker
 #            @prop size type={string} title="Image Size (Optional)" description="Enter a size for the image (e.g., 100% auto)."
 #            @prop @advanced position type={string} title="Background Position" description="The location or coordinates that specify where the background image is pinned relative to its container. Accepts one to four valid CSS values. If one value is specified, this is either the edge or the X-coordinate (with the Y-coordinate set to 50%). If two values, X and Y-coordinates.If four values, odd values must be keywords and even values must be units, where the keywords determine the initial edges and the units determine the offset (ex. top 10px right 40px = 10px from the top, 40px from the right edge). The default is top left, or 0 0 (Commonly used options are: center or top or bottom or top left or bottom center or center center or center -266px or center -270px)"
 #          @end
 #          @when type = "color":
 #            @prop color type={string} title="Background color" description="Enter a color (e.g., '#999' or 'rgb(230,230,230)')"
 #          @end
 #        @end
 #      @end
 #      @prop header type={string} title="Header Text" description="Text for the primary region's header." @allow localeKeyRTF
 #      @prop subtitle type={string} title="Subtitle Text (Optional)" description="Subtitle text for the primary region." @allow localeKeyRTF
 #      @prop image type={string} title="Image" description="Image path for the region" @allow imagePicker
 #      @prop @advanced image_description type={string} title="Alt Text" description="Decorative images should have an empty alt tag for screen readers" @allow localeKeyPlain
 #      @contains @object_of 'spacer' with:
 #        @title 'Spacer Region'
 #        @prop enable type={boolean} title="Enable Spacer Region?" default="false"
 #        @contains @one_of dependency with:
 #          @when enable = "true":
 #            @prop class type={string} title="Class Name(s)" description="Add an additional class for the spacer region."
 #            @prop columns type={integer} title="Columns" description="Enter the number of columns for the spacer region." minimum="1" maximum="12" default="2"
 #          @end
 #        @end
 #      @end
 #      @contains @object_of 'primary' with:
 #        @title 'Primary Region'
 #        @prop enable type={boolean} title="Enable Primary Region?" default="false"
 #        @contains @one_of dependency with:
 #          @when enable = "true":
 #            @prop class type={string} title="Class Name(s)" description="Add an additional class for the primary region."
 #            @prop columns type={integer} title="Columns" description="Enter the number of columns for the primary region." minimum="1" maximum="12" default="8"
 #            @contains @array_of 'intro_text' with:
 #              @prop description type={string} title="Intro Text" description="Text for the primary region." @allow localeKeyRTF
 #            @end
 #            @contains @object_of 'instructions' with:
 #              @title 'Instructions (optional)'
 #              @prop text type={string} title="Instruction Text" @allow localeKeyRTF
 #              @prop [icon_prefix] type={string} title="Icon Prefix" default="fas"
 #              "fas"
 #              "far"
 #              "fal"
 #              @prop icon_name type={string} title="Icon Name" default="fa-info-circle"
 #            @end
 #            @contains @array_of 'blocks' with:
 #              @includes: {{blocks}}
 #            @end
 #            @contains @object_of 'navigation' with:
 #              @title 'Navigation'
 #              @prop back type={boolean} title="Disable this to hide the left navigation button" default="true"
 #              @prop next type={boolean} title="Disable this to hide the right navigation button" default="true"
 #              @prop class type={string} title="Navigation Button Class Name(s)" description="Add an additional class for the navigation buttons."
 #              @prop position type={string} title="Next Button Position" description="flex-start= left, flex-end=right"
 #            @end
 #          @end
 #        @end
 #      @end
 #      @prop @advanced container_class type={string} title="Container Class Name(s)" description="Add an additional class for the outer grid/container."
 #      @prop @advanced class type={string} title="Region Class Name(s)" description="Add an additional class for the outer grid/region."
 #      @prop @advanced header_class type={string} title="Header Class Name(s)" description="Add an additional class for the header text."
 #      @prop @advanced columns type={integer} title="Columns" description="Enter the number of columns for the outer grid/region." minimum="1" maximum="12" default="12"
 #      @prop @advanced maxwidth type={boolean} title="Enable this to add a maxwidth property for the outer grid/region."
 #    @end
##
--}}

{{!-- Please see course-templates/single-column page in Skeletor for sample usage --}}

blocks:
  - type: layout
    path: grid/grid-dynamic
    class: {{container_class}}
    regions:
      - columns: {{#if columns}}{{columns}}{{else}}12{{/if}}
        {{#if background}}
        background:
          type: {{background.type}}
          settings:
            {{#if (equal background.type "image")}}
            path: {{background.path}}
            size: {{background.size}}
            {{#if background.position}}
            backgroundPosition: {{background.position}}{{/if}}
            {{else}}
            color: {{background.color}}
            {{/if}}
        {{/if}}
        minHeight:
          calculate:
            valueA: 100vh
            valueB: 108px
            operation: subtract
        class: {{class}}
        blocks:
          - type: layout
            path: grid/grid-dynamic
            {{#if maxwidth}}maxwidth: true{{/if}}
            regions:
              {{#if spacer.enable}}
              - columns: {{#if spacer.columns}}{{spacer.columns}}{{else}}2{{/if}}
                class: {{spacer.class}}
                {{#if image}}
                blocks:
                  - type: image
                    class: text-center
                    images:
                      - path: {{image}}
                        {{#if image_description}}
                        description: {{image_description}}
                        {{/if}}
                {{/if}}
              {{/if}}
              {{#if primary.enable}}
              - columns: {{#if primary.columns}}{{primary.columns}}{{else}}8{{/if}}
                class: {{primary.class}} p-stack-top-lg
                blocks:
                  {{#if header}}
                  - type: header
                    class: h1 {{#if header_class}}{{header_class}}{{/if}}
                    h1:
                      - {{header}}
                  {{/if}}
                  {{#if subtitle}}
                  - type: text
                    items:
                      - description: {{subtitle}}
                        class: subtitle
                  {{/if}}
                  {{#if primary.intro_text}}
                  - type: text
                    class: m-stack-lg
                    items:
                    {{#each primary.intro_text}}
                      - description: {{t description}}
                        class: p1
                    {{/each}}
                  {{/if}}
                  {{#if primary.instructions}}
                  - type: container
                    flex: true
                    align: start
                    justify: flex-start
                    wrap: nowrap
                    blocks:
                      - type: icon
                        class: p2 text-emphasis m-inline-sm
                        size: fa-lg
                        prefix: {{#if primary.instructions.icon_prefix}}{{primary.instructions.icon_prefix}}{{else}}fas{{/if}}
                        name: {{#if primary.instructions.icon_name}}{{primary.instructions.icon_name}}{{else}}fa-info-circle{{/if}}
                      - type: text
                        class: p2 text-emphasis bold
                        items:
                          - description: {{primary.instructions.text}}
                  {{/if}}
                  {{#if primary.blocks}}
                  - type: container
                    class: m-stack-md
                    blocks:
                    {{{yamlize primary.blocks 20}}}
                  {{/if}}
                  - type: container
                    class: m-stack-xl
                    flex: true
                    justify: {{#if (equal primary.navigation.back false)}}{{primary.navigation.position}}{{else}}space-between{{/if}}
                    blocks:
                      {{#unless (equal primary.navigation.back false)}}
                      - type: component
                        path: partial/molecules/navigate
                        parameters:
                          direction: back
                          text: backButton
                          button_class: {{primary.navigation.class}}
                      {{/unless}}
                      {{#unless (equal primary.navigation.next false)}}
                      - type: component
                        path: partial/molecules/navigate
                        parameters:
                          direction: forward
                          text: forwardButton
                          override_enabled: false
                          button_class: {{primary.navigation.class}}
                      {{/unless}}
              {{/if}}
